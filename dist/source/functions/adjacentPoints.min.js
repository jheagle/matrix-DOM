"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,require("core-js/modules/esnext.async-iterator.filter.js"),require("core-js/modules/esnext.iterator.constructor.js"),require("core-js/modules/esnext.iterator.filter.js"),require("core-js/modules/esnext.async-iterator.map.js"),require("core-js/modules/esnext.iterator.map.js"),require("core-js/stable");var _getPointsLines=_interopRequireDefault(require("./getPointsLines")),_point=_interopRequireDefault(require("../objects/point")),_nextCell=_interopRequireDefault(require("./nextCell")),_checkValidPoint=_interopRequireDefault(require("./checkValidPoint"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const adjacentPoints=(e,t)=>(0,_getPointsLines.default)([[(0,_point.default)(-1,1,1),(0,_point.default)(1,-1,-1)],[(0,_point.default)(1,1,1),(0,_point.default)(-1,1,-1)],[(0,_point.default)(-1,-1,1),(0,_point.default)(1,-1,1)],[(0,_point.default)(1,0,0),(0,_point.default)(1,1,-1)],[(0,_point.default)(-1,1,0),(0,_point.default)(1,1,0)]]).concat([(0,_point.default)(0,0,1),(0,_point.default)(1,0,0),(0,_point.default)(-1,0,-1),(0,_point.default)(0,0,-1)]).map((t=>(0,_nextCell.default)(e,t))).filter((i=>(0,_checkValidPoint.default)((0,_nextCell.default)(e,i),t)));var _default=exports.default=adjacentPoints;